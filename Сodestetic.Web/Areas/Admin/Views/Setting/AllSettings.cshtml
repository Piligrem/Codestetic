@{
    var gridPageSize = EngineContext.Current.Resolve<Specter.Web.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.AllSettings").Text;
}
@using Kendo.Mvc.UI;

<div class="admin-content align-center">
    <div class="admin-row-content">
        <div class="section-header">
            <div class="title">
                <i class="icon icon-cogs"></i>
                @ViewBag.Title
            </div>
        </div>
        <div class="alert alert-info">
            @T("Admin.Configuration.Settings.AllSettings.Description")
        </div>
        <table class="adminContent">
            <tr>
                <td>
                    @(Html.Kendo().Grid<SettingModel>()
                        .Name("settings-grid")
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.Name)
                                .Width(450)
                                .Filterable(filterable => filterable.UI("nameFilter"));
                            //.Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")));
                            columns.Bound(x => x.Value)
                                .Width(350)
                                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")));
                            columns.Command(commands =>
                            {
                                commands.Edit().Text(@T("Common.Edit"));
                                commands.Destroy().Text(@T("Common.Delete"));
                            });
                        })
                        .ToolBar(
                            toolbar => toolbar.Create().Text(@T("Common.Insert")).HtmlAttributes(new { @class = "btn" }))
                        .Editable(x =>
                        {
                            x.Mode(GridEditMode.InLine);
                        })
                        .Filterable(filter => filter
                            .Mode(GridFilterMode.Row)
                        )
                        .Pageable(pager => pager
                            .Input(true)
                            .Numeric(true)
                            .Info(true)
                            .PreviousNext(true)
                            .Refresh(true)
                            .PageSizes(true))
                        .DataSource(dataBinding =>
                        {
                            dataBinding
                                .Ajax()
                                .Model(x => x.Id(y => y.Id))
                                .Read("AllSettings", "Setting", new { area = "Admin" })
                                .Update("SettingUpdate", "Setting", new { area = "Admin" })
                                .Destroy("SettingDelete", "Setting", new { area = "Admin" })
                                .Create("SettingAdd", "Setting", new { area = "Admin" })
                                .PageSize(gridPageSize)
                                .ServerOperation(true);
                        })
                        .HtmlAttributes(new { @class = "grid-with-toolbar" })
                            //.Events(x => x.Edit("grid_onStoreEdit"))
                            //.EnableCustomBinding(true)
                    )
                    <script type="text/javascript">
                        function nameFilter(element) {
                            element.kendoDropDownList({
                                dataSource: {
                                    transport: {
                                        read: "@Url.Action("FilterMenu_Name", "Setting", new { area = "Admin" })"
                                    }
                                },
                                optionLabel: "--Select Value--"
                            });
                        }
                        function grid_onError(e) {
                            alert(e.XMLHttpRequest.responseText);
                            console.log(e.XMLHttpRequest.responseText);
                            e.preventDefault();
                        }

                        function grid_onStoreEdit(e) {
                            $(e.form).find('#Store').select2('val', e.dataItem['StoreId']);
                        }
                    </script>
                </td>
            </tr>
        </table>
    </div>
</div>

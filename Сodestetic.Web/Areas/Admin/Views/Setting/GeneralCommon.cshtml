@model GeneralCommonSettingsModel
           
@using Kendo.Mvc.UI;
@using Specter.Web.Core.Domain.Users;
@using Specter.Web.Core.Domain.Security;
@using Specter.Web.Framework.UI;

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.GeneralCommon").Text;
}
<div class="admin-content align-center">
    @using (Html.BeginForm())
    {
        <div class="section-header">
            <div class="title">
                <i class="icon icon-cogs"></i>
                @ViewBag.Title
            </div>
            <div class="options">
                <button type="submit" name="save" value="save" class="btn btn-primary"><i class="icon-ok icon-white"></i>@T("Admin.Common.SaveContinue")</button>
            </div>
        </div>
        <script type="text/javascript">
            $(document).ready(function () {

                $("#@Html.FieldIdFor(model => model.SiteInformationSettings.SiteClosed)").click(toggleSiteClosed);
                $("#@Html.FieldIdFor(model => model.SecuritySettings.CaptchaEnabled)").click(toggleReCaptcha);
                $("#@Html.FieldIdFor(model => model.SocialSettings.ShowSocialLinksInFooter)").click(toggleSocialLinks);
                $("#@Html.FieldIdFor(model => model.LocalizationSettings.SeoFriendlyUrlsForLanguagesEnabled)").click(toggleSeoLanguageUrls);

                toggleSocialLinks();
                toggleSiteClosed();
                toggleReCaptcha();
                toggleSeoLanguageUrls();
            });

            function toggleSocialLinks() {
                if ($('#@Html.FieldIdFor(model => model.SocialSettings.ShowSocialLinksInFooter)').is(':checked')) {
                    $('#facebookLink').show();
                    $('#googlePlusLink').show();
                    $('#twitterLink').show();
                    $('#pinterestLink').show();
                }
                else {
                    $('#facebookLink').hide();
                    $('#googlePlusLink').hide();
                    $('#twitterLink').hide();
                    $('#pinterestLink').hide();
                }
            }


            function toggleSiteClosed() {
                if ($('#@Html.FieldIdFor(model => model.SiteInformationSettings.SiteClosed)').is(':checked')) {
                    $('#pnlSiteClosedAllowForAdmins').show();
                }
                else {
                    $('#pnlSiteClosedAllowForAdmins').hide();
                }
            }

            function toggleReCaptcha() {
                if ($('#@Html.FieldIdFor(model => model.SecuritySettings.CaptchaEnabled)').is(':checked')) {
                    $('#ssCaptchaShowOnLoginPagepnl').show();
                    $('#ssCaptchaShowOnRegistrationPagepnl').show();
                    $('#ssCaptchaShowOnContactUsPagepnl').show();
                    $('#ssCaptchaShowOnEmailWishlistToFriendPagepnl').show();
                    $('#ssCaptchaShowOnEmailProductToFriendPagepnl').show();
                    $('#ssCaptchaShowOnAskQuestionPagepnl').show();
                    $('#ssCaptchaShowOnBlogCommentPagepnl').show();
                    $('#ssCaptchaShowOnNewsCommentPagepnl').show();
                    $('#ssCaptchaShowOnProductReviewPagepnl').show();
                    $('#ssReCaptchaPublicKeypnl').show();
                    $('#ssReCaptchaPrivateKeypnl').show();
                }
                else {
                    $('#ssCaptchaShowOnLoginPagepnl').hide();
                    $('#ssCaptchaShowOnRegistrationPagepnl').hide();
                    $('#ssCaptchaShowOnContactUsPagepnl').hide();
                    $('#ssCaptchaShowOnEmailWishlistToFriendPagepnl').hide();
                    $('#ssCaptchaShowOnEmailProductToFriendPagepnl').hide();
                    $('#ssCaptchaShowOnAskQuestionPagepnl').hide();
                    $('#ssCaptchaShowOnBlogCommentPagepnl').hide();
                    $('#ssCaptchaShowOnNewsCommentPagepnl').hide();
                    $('#ssCaptchaShowOnProductReviewPagepnl').hide();
                    $('#ssReCaptchaPublicKeypnl').hide();
                    $('#ssReCaptchaPrivateKeypnl').hide();
                }
            }

            function toggleSeoLanguageUrls() {
                if ($('#@Html.FieldIdFor(model => model.LocalizationSettings.SeoFriendlyUrlsForLanguagesEnabled)').is(':checked')) {
                    $('#pnlDefaultLanguageRedirectBehaviour').show();
                    $('#pnlInvalidLanguageRedirectBehaviour').show();
                }
                else {
                    $('#pnlDefaultLanguageRedirectBehaviour').hide();
                    $('#pnlInvalidLanguageRedirectBehaviour').hide();
                }
            }
        </script>
        @Html.ValidationSummary(false)
        @(Html.TabSite().TabStrip().Name("generalsettings-edit").Items(x =>
        {
            x.Add().Text(T("Admin.Configuration.Settings.CommonGeneral").Text).Content(@TabSiteInformationSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.SEOSettings").Text).Content(@TabSEOSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.SecuritySettings").Text).Content(@TabSecuritySettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.LocalizationSettings").Text).Content(TabLocalizationSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.PdfSettings").Text).Content(@TabPdfSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.CompanyInformationSettings").Text).Content(@TabCompanyInformationSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.ContactDataSettings").Text).Content(@TabContactDataSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.SocialSettings").Text).Content(@TabSocialSettings());
            x.Add().Text(T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings").Text).Content(@TabFullTextSettings());
        }))
    }
    @helper TabSiteInformationSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SiteInformationSettings.SiteClosed)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SiteInformationSettings.SiteClosed)
                    @Html.ValidationMessageFor(model => model.SiteInformationSettings.SiteClosed)
                </td>
            </tr>
            <tr id="pnlSiteClosedAllowForAdmins">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SiteInformationSettings.SiteClosedAllowForAdmins)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SiteInformationSettings.SiteClosedAllowForAdmins)
                    @Html.ValidationMessageFor(model => model.SiteInformationSettings.SiteClosedAllowForAdmins)
                </td>
            </tr>
        </table>
    }
    @helper TabSEOSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.PageTitleSeparator)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.PageTitleSeparator)
                    @Html.ValidationMessageFor(model => model.SeoSettings.PageTitleSeparator)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.PageTitleSeoAdjustment)
                </td>
                <td class="adminData">
                    @Html.Kendo().DropDownListFor(model => model.SeoSettings.PageTitleSeoAdjustment).BindTo(Model.SeoSettings.AvailablePageTitleSeoAdjustment)
                    @Html.ValidationMessageFor(model => model.SeoSettings.PageTitleSeoAdjustment)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.DefaultTitle)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.DefaultTitle)
                    @Html.ValidationMessageFor(model => model.SeoSettings.DefaultTitle)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.DefaultMetaKeywords)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.DefaultMetaKeywords)
                    @Html.ValidationMessageFor(model => model.SeoSettings.DefaultMetaKeywords)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.DefaultMetaDescription)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.DefaultMetaDescription)
                    @Html.ValidationMessageFor(model => model.SeoSettings.DefaultMetaDescription)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.ConvertNonWesternChars)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.ConvertNonWesternChars)
                    @Html.ValidationMessageFor(model => model.SeoSettings.ConvertNonWesternChars)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SeoSettings.CanonicalUrlsEnabled)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SeoSettings.CanonicalUrlsEnabled)
                    @Html.ValidationMessageFor(model => model.SeoSettings.CanonicalUrlsEnabled)
                </td>
            </tr>
        </table>
    }
    @helper TabSecuritySettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.EncryptionKey)
                </td>
                <td class="adminData">
                    <div>
                        @Html.EditorFor(model => model.SecuritySettings.EncryptionKey)
                        @Html.ValidationMessageFor(model => model.SecuritySettings.EncryptionKey)
                    </div>
                    <div>
                        <input type="submit" name="changeencryptionkey" value="@T("Admin.Common.Change")" id="changeencryptionkey" class="btn" style="margin-top: 5px"/>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.AdminAreaAllowedIpAddresses)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.AdminAreaAllowedIpAddresses)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.AdminAreaAllowedIpAddresses)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.HideAdminMenuItemsBasedOnPermissions)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.HideAdminMenuItemsBasedOnPermissions)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.HideAdminMenuItemsBasedOnPermissions)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="alert alert-info" style="margin-bottom: 0; margin-top: 8px; max-width: 800px;">
                        @T("Admin.Configuration.Settings.General.Common.Captcha.Hint")
                    </div>
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaEnabled)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaEnabled)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaEnabled)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnLoginPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnLoginPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnLoginPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnLoginPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnRegistrationPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnRegistrationPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnRegistrationPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnRegistrationPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnContactUsPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnContactUsPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnContactUsPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnContactUsPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnEmailWishlistToFriendPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnEmailWishlistToFriendPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnEmailWishlistToFriendPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnEmailWishlistToFriendPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnEmailProductToFriendPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnEmailProductToFriendPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnEmailProductToFriendPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnEmailProductToFriendPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnAskQuestionPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnAskQuestionPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnAskQuestionPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnAskQuestionPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnBlogCommentPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnBlogCommentPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnBlogCommentPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnBlogCommentPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnNewsCommentPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnNewsCommentPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnNewsCommentPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnNewsCommentPage)
                </td>
            </tr>
            <tr id="ssCaptchaShowOnProductReviewPagepnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.CaptchaShowOnProductReviewPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.CaptchaShowOnProductReviewPage)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.CaptchaShowOnProductReviewPage)
                </td>
            </tr>
            <tr id="ssReCaptchaPublicKeypnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.ReCaptchaPublicKey)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.ReCaptchaPublicKey)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.ReCaptchaPublicKey)
                </td>
            </tr>
            <tr id="ssReCaptchaPrivateKeypnl">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SecuritySettings.ReCaptchaPrivateKey)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.SecuritySettings.ReCaptchaPrivateKey)
                    @Html.ValidationMessageFor(model => model.SecuritySettings.ReCaptchaPrivateKey)
                </td>
            </tr>
        </table>
    }
    @helper TabPdfSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.PdfSettings.Enabled)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.PdfSettings.Enabled)
                    @Html.ValidationMessageFor(model => model.PdfSettings.Enabled)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.PdfSettings.LetterPageSizeEnabled)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.PdfSettings.LetterPageSizeEnabled)
                    @Html.ValidationMessageFor(model => model.PdfSettings.LetterPageSizeEnabled)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.PdfSettings.LogoPictureId)
                </td>
                <td class="adminData" id="pdf-logo-picture">
                    @Html.EditorFor(model => model.PdfSettings.LogoPictureId, "#pdf-logo-picture")
                    @Html.ValidationMessageFor(model => model.PdfSettings.LogoPictureId)
                </td>
            </tr>
        </table>
    }
    @helper TabLocalizationSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.LoadAllLocaleRecordsOnStartup)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.LocalizationSettings.LoadAllLocaleRecordsOnStartup)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.LoadAllLocaleRecordsOnStartup)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.UseImagesForLanguageSelection)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.LocalizationSettings.UseImagesForLanguageSelection)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.UseImagesForLanguageSelection)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.SeoFriendlyUrlsForLanguagesEnabled)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.LocalizationSettings.SeoFriendlyUrlsForLanguagesEnabled)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.SeoFriendlyUrlsForLanguagesEnabled)
                </td>
            </tr>
            <tr id="pnlDefaultLanguageRedirectBehaviour">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.DefaultLanguageRedirectBehaviour)
                </td>
                <td class="adminData">
                    @Html.DropDownListForEnum(model => model.LocalizationSettings.DefaultLanguageRedirectBehaviour)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.DefaultLanguageRedirectBehaviour)
                </td>
            </tr>
            <tr id="pnlInvalidLanguageRedirectBehaviour">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.InvalidLanguageRedirectBehaviour)
                </td>
                <td class="adminData">
                    @Html.DropDownListForEnum(model => model.LocalizationSettings.InvalidLanguageRedirectBehaviour)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.InvalidLanguageRedirectBehaviour)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.LocalizationSettings.DetectBrowserUserLanguage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.LocalizationSettings.DetectBrowserUserLanguage)
                    @Html.ValidationMessageFor(model => model.LocalizationSettings.DetectBrowserUserLanguage)
                </td>
            </tr>
        </table>
    }
    @helper TabCompanyInformationSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.CompanyName)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.CompanyName)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.CompanyName)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <hr />
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Salutation)
                </td>
                <td class="adminData">
                    @Html.Kendo().DropDownListFor(model => model.CompanyInformationSettings.Salutation).BindTo(Model.CompanyInformationSettings.Salutations)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Salutation)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Title)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Title)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Title)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Firstname)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Firstname)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Firstname)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Lastname)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Lastname)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Lastname)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.CompanyManagementDescription)
                </td>
                <td class="adminData">
                    @Html.Kendo().DropDownListFor(model => model.CompanyInformationSettings.CompanyManagementDescription).BindTo(Model.CompanyInformationSettings.ManagementDescriptions)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.CompanyManagementDescription)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.CompanyManagement)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.CompanyManagement)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.CompanyManagement)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Street)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Street)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Street)
                </td>
            </tr>

            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Street2)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Street2)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Street2)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.ZipCode)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.ZipCode)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.ZipCode)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.City)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.City)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.City)
                </td>
            </tr>

            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.CountryId)
                </td>
                <td class="adminData">
                    @Html.Kendo().DropDownListFor(model => model.CompanyInformationSettings.CountryId).BindTo(Model.CompanyInformationSettings.AvailableCountries)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.CountryId)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.Region)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.Region)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.Region)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <hr />
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.VatId)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.VatId)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.VatId)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.CommercialRegister)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.CommercialRegister)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.CommercialRegister)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.CompanyInformationSettings.TaxNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.CompanyInformationSettings.TaxNumber)
                    @Html.ValidationMessageFor(model => model.CompanyInformationSettings.TaxNumber)
                </td>
            </tr>
        </table>
    }
    @helper TabContactDataSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.CompanyTelephoneNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.CompanyTelephoneNumber)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.CompanyTelephoneNumber)
                </td>
            </tr>

            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.HotlineTelephoneNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.HotlineTelephoneNumber)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.HotlineTelephoneNumber)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.MobileTelephoneNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.MobileTelephoneNumber)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.MobileTelephoneNumber)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.CompanyFaxNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.CompanyFaxNumber)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.CompanyFaxNumber)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <hr />
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.CompanyEmailAddress)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.CompanyEmailAddress)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.CompanyEmailAddress)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.WebmasterEmailAddress)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.WebmasterEmailAddress)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.WebmasterEmailAddress)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.SupportEmailAddress)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.SupportEmailAddress)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.SupportEmailAddress)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.ContactDataSettings.ContactEmailAddress)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.ContactDataSettings.ContactEmailAddress)
                    @Html.ValidationMessageFor(model => model.ContactDataSettings.ContactEmailAddress)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <hr />
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.Bankname)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.Bankname)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.Bankname)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.Bankcode)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.Bankcode)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.Bankcode)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.AccountNumber)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.AccountNumber)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.AccountNumber)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.AccountHolder)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.AccountHolder)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.AccountHolder)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.Iban)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.Iban)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.Iban)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.BankConnectionSettings.Bic)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.BankConnectionSettings.Bic)
                    @Html.ValidationMessageFor(model => model.BankConnectionSettings.Bic)
                </td>
            </tr>
        </table>
    }
    @helper TabSocialSettings()
    {
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.ShowSocialLinksInFooter)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.ShowSocialLinksInFooter)
                    @Html.ValidationMessageFor(model => model.SocialSettings.ShowSocialLinksInFooter)
                </td>
            </tr>
            <tr id="facebookLink">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.FacebookLink)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.FacebookLink)
                    @Html.ValidationMessageFor(model => model.SocialSettings.FacebookLink)
                </td>
            </tr>
            <tr id="googlePlusLink">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.GooglePlusLink)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.GooglePlusLink)
                    @Html.ValidationMessageFor(model => model.SocialSettings.GooglePlusLink)
                </td>
            </tr>
            <tr id="twitterLink">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.TwitterLink)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.TwitterLink)
                    @Html.ValidationMessageFor(model => model.SocialSettings.TwitterLink)
                </td>
            </tr>
            <tr id="pinterestLink">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.PinterestLink)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.PinterestLink)
                    @Html.ValidationMessageFor(model => model.SocialSettings.PinterestLink)
                </td>
            </tr>
            <tr id="youtubeLink">
                <td class="adminTitle">
                    @Html.SpecterLabelFor(model => model.SocialSettings.YoutubeLink)
                </td>
                <td class="adminData">
                    @Html.SettingEditorFor(model => model.SocialSettings.YoutubeLink)
                    @Html.ValidationMessageFor(model => model.SocialSettings.YoutubeLink)
                </td>
            </tr>
        </table>
    }
    @helper TabFullTextSettings()
    {
        <table class="adminContent">
            <tr>
                <td colspan="2">
                    @if (Model.FullTextSettings.Supported)
                    {
                        <div class="alert alert-success fade in">
                            @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.Supported")
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger fade in">
                            @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.NotSupported")
                        </div>
                    }
                </td>
            </tr>
            @if (Model.FullTextSettings.Supported)
            {
                <tr>
                    <td class="adminTitle">
                        <div class="ctl-label">
                            @if (Model.FullTextSettings.Enabled)
                            {
                                @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.CurrenlyEnabled")
                            }
                            else
                            {
                                @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.CurrenlyDisabled")
                            }
                        </div>
                    </td>
                    <td class="adminData">
                        @if (Model.FullTextSettings.Enabled)
                        {
                            <button type="submit" name="togglefulltext" value="togglefulltext" class="btn btn-success">
                                <i class="icon-power-off"></i>&nbsp;&nbsp;
                                @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.Disable").Text
                            </button>
                        }
                        else
                        {
                            <button type="submit" name="togglefulltext" value="togglefulltext" class="btn btn-primary">
                                <i class="icon-power-off"></i>&nbsp;&nbsp;
                                @T("Admin.Configuration.Settings.GeneralCommon.FullTextSettings.Enable").Text
                            </button>
                        }
                    </td>
                </tr>
                if (Model.FullTextSettings.Enabled)
                {
                    <tr>
                        <td class="adminTitle">
                            @Html.SpecterLabelFor(model => model.FullTextSettings.SearchMode)
                        </td>
                        <td class="adminData">
                            @Html.DropDownListFor(model => model.FullTextSettings.SearchMode, Model.FullTextSettings.SearchModeValues)
                            @Html.ValidationMessageFor(model => model.FullTextSettings.SearchMode)
                        </td>
                    </tr>
                }
            }
        </table>
    }
</div>
<script src="/Scripts/fileupload/jquery.ui.widget.min.js" type="text/javascript"></script>
<script src="/Scripts/fileupload/jquery.fileupload.min.js" type="text/javascript"></script>
